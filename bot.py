import logging
import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext

# ðŸ”¹ Sá»­ dá»¥ng API Token má»›i cá»§a báº¡n
TOKEN = "7523225425:AAGAW-lYyt3gYCDdFEcsl6PMSaI4rJHUxwQ"

# ðŸ”¹ URL Ä‘á»ƒ láº¥y giÃ¡ XRP tá»« Binance
BINANCE_API_URL = "https://api.binance.com/api/v3/ticker/price?symbol=XRPUSDT"

# ðŸ”¹ Cáº¥u hÃ¬nh logging
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

async def get_xrp_price():
    """Láº¥y giÃ¡ XRP tá»« Binance API"""
    response = requests.get(BINANCE_API_URL)
    data = response.json()
    return float(data["price"])

async def start(update: Update, context: CallbackContext):
    """Lá»‡nh /start"""
    await update.message.reply_text("Xin chÃ o! TÃ´i lÃ  bot giao dá»‹ch. Nháº­p /xrp Ä‘á»ƒ xem giÃ¡ XRP.")

async def xrp(update: Update, context: CallbackContext):
    """Lá»‡nh /xrp Ä‘á»ƒ láº¥y giÃ¡ XRP"""
    price = await get_xrp_price()
    await update.message.reply_text(f"GiÃ¡ XRP hiá»‡n táº¡i: {price:.4f} USDT")

def main():
    """Cháº¡y bot Telegram"""
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("xrp", xrp))

    application.run_polling()

if __name__ == "__main__":
    main()
